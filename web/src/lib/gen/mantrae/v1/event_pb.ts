// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file mantrae/v1/event.proto (package mantrae.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_buf_validate_validate } from "../../buf/validate/validate_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Agent } from "./agent_pb";
import { file_mantrae_v1_agent } from "./agent_pb";
import type { AuditLog } from "./auditlog_pb";
import { file_mantrae_v1_auditlog } from "./auditlog_pb";
import type { DnsProvider } from "./dns_provider_pb";
import { file_mantrae_v1_dns_provider } from "./dns_provider_pb";
import type { EntryPoint } from "./entry_point_pb";
import { file_mantrae_v1_entry_point } from "./entry_point_pb";
import type { Middleware } from "./middleware_pb";
import { file_mantrae_v1_middleware } from "./middleware_pb";
import type { Router } from "./router_pb";
import { file_mantrae_v1_router } from "./router_pb";
import type { Service } from "./service_pb";
import { file_mantrae_v1_service } from "./service_pb";
import type { User } from "./user_pb";
import { file_mantrae_v1_user } from "./user_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mantrae/v1/event.proto.
 */
export const file_mantrae_v1_event: GenFile = /*@__PURE__*/
  fileDesc("ChZtYW50cmFlL3YxL2V2ZW50LnByb3RvEgptYW50cmFlLnYxIrMDCgxQcm9maWxlRXZlbnQSKQoKZXZlbnRfdHlwZRgBIAEoDjIVLm1hbnRyYWUudjEuRXZlbnRUeXBlEi8KDXJlc291cmNlX3R5cGUYAiABKA4yGC5tYW50cmFlLnYxLlJlc291cmNlVHlwZRISCgpwcm9maWxlX2lkGAMgASgDEi0KCXRpbWVzdGFtcBgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASJAoGcm91dGVyGAogASgLMhIubWFudHJhZS52MS5Sb3V0ZXJIABImCgdzZXJ2aWNlGAsgASgLMhMubWFudHJhZS52MS5TZXJ2aWNlSAASLAoKbWlkZGxld2FyZRgMIAEoCzIWLm1hbnRyYWUudjEuTWlkZGxld2FyZUgAEi0KC2VudHJ5X3BvaW50GA0gASgLMhYubWFudHJhZS52MS5FbnRyeVBvaW50SAASIgoFYWdlbnQYDiABKAsyES5tYW50cmFlLnYxLkFnZW50SAASKQoJYXVkaXRfbG9nGA8gASgLMhQubWFudHJhZS52MS5BdWRpdExvZ0gAQgoKCHJlc291cmNlIvcBCgtHbG9iYWxFdmVudBIpCgpldmVudF90eXBlGAEgASgOMhUubWFudHJhZS52MS5FdmVudFR5cGUSLwoNcmVzb3VyY2VfdHlwZRgCIAEoDjIYLm1hbnRyYWUudjEuUmVzb3VyY2VUeXBlEi0KCXRpbWVzdGFtcBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASIAoEdXNlchgKIAEoCzIQLm1hbnRyYWUudjEuVXNlckgAEi8KDGRuc19wcm92aWRlchgLIAEoCzIXLm1hbnRyYWUudjEuRG5zUHJvdmlkZXJIAEIKCghyZXNvdXJjZSJuChpTdHJlYW1Qcm9maWxlRXZlbnRzUmVxdWVzdBIeCgpwcm9maWxlX2lkGAEgASgDQgq6SAfIAQEiAiAAEjAKDnJlc291cmNlX3R5cGVzGAIgAygOMhgubWFudHJhZS52MS5SZXNvdXJjZVR5cGUiTQoZU3RyZWFtR2xvYmFsRXZlbnRzUmVxdWVzdBIwCg5yZXNvdXJjZV90eXBlcxgBIAMoDjIYLm1hbnRyYWUudjEuUmVzb3VyY2VUeXBlKm8KCUV2ZW50VHlwZRIaChZFVkVOVF9UWVBFX1VOU1BFQ0lGSUVEEAASFgoSRVZFTlRfVFlQRV9DUkVBVEVEEAESFgoSRVZFTlRfVFlQRV9VUERBVEVEEAISFgoSRVZFTlRfVFlQRV9ERUxFVEVEEAMqjQIKDFJlc291cmNlVHlwZRIdChlSRVNPVVJDRV9UWVBFX1VOU1BFQ0lGSUVEEAASGAoUUkVTT1VSQ0VfVFlQRV9ST1VURVIQARIZChVSRVNPVVJDRV9UWVBFX1NFUlZJQ0UQAhIcChhSRVNPVVJDRV9UWVBFX01JRERMRVdBUkUQAxIdChlSRVNPVVJDRV9UWVBFX0VOVFJZX1BPSU5UEAQSGwoXUkVTT1VSQ0VfVFlQRV9BVURJVF9MT0cQBRIXChNSRVNPVVJDRV9UWVBFX0FHRU5UEAYSFgoSUkVTT1VSQ0VfVFlQRV9VU0VSEAcSHgoaUkVTT1VSQ0VfVFlQRV9ETlNfUFJPVklERVIQCDLBAQoMRXZlbnRTZXJ2aWNlElkKE1N0cmVhbVByb2ZpbGVFdmVudHMSJi5tYW50cmFlLnYxLlN0cmVhbVByb2ZpbGVFdmVudHNSZXF1ZXN0GhgubWFudHJhZS52MS5Qcm9maWxlRXZlbnQwARJWChJTdHJlYW1HbG9iYWxFdmVudHMSJS5tYW50cmFlLnYxLlN0cmVhbUdsb2JhbEV2ZW50c1JlcXVlc3QaFy5tYW50cmFlLnYxLkdsb2JhbEV2ZW50MAFCpAEKDmNvbS5tYW50cmFlLnYxQgpFdmVudFByb3RvUAFaPWdpdGh1Yi5jb20vbWl6dWNoaWxhYnMvbWFudHJhZS9wcm90by9nZW4vbWFudHJhZS92MTttYW50cmFldjGiAgNNWFiqAgpNYW50cmFlLlYxygIKTWFudHJhZVxWMeICFk1hbnRyYWVcVjFcR1BCTWV0YWRhdGHqAgtNYW50cmFlOjpWMWIGcHJvdG8z", [file_buf_validate_validate, file_google_protobuf_timestamp, file_mantrae_v1_agent, file_mantrae_v1_auditlog, file_mantrae_v1_dns_provider, file_mantrae_v1_entry_point, file_mantrae_v1_middleware, file_mantrae_v1_router, file_mantrae_v1_service, file_mantrae_v1_user]);

/**
 * @generated from message mantrae.v1.ProfileEvent
 */
export type ProfileEvent = Message<"mantrae.v1.ProfileEvent"> & {
  /**
   * @generated from field: mantrae.v1.EventType event_type = 1;
   */
  eventType: EventType;

  /**
   * @generated from field: mantrae.v1.ResourceType resource_type = 2;
   */
  resourceType: ResourceType;

  /**
   * @generated from field: int64 profile_id = 3;
   */
  profileId: bigint;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 4;
   */
  timestamp?: Timestamp;

  /**
   * @generated from oneof mantrae.v1.ProfileEvent.resource
   */
  resource: {
    /**
     * @generated from field: mantrae.v1.Router router = 10;
     */
    value: Router;
    case: "router";
  } | {
    /**
     * @generated from field: mantrae.v1.Service service = 11;
     */
    value: Service;
    case: "service";
  } | {
    /**
     * @generated from field: mantrae.v1.Middleware middleware = 12;
     */
    value: Middleware;
    case: "middleware";
  } | {
    /**
     * @generated from field: mantrae.v1.EntryPoint entry_point = 13;
     */
    value: EntryPoint;
    case: "entryPoint";
  } | {
    /**
     * @generated from field: mantrae.v1.Agent agent = 14;
     */
    value: Agent;
    case: "agent";
  } | {
    /**
     * @generated from field: mantrae.v1.AuditLog audit_log = 15;
     */
    value: AuditLog;
    case: "auditLog";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mantrae.v1.ProfileEvent.
 * Use `create(ProfileEventSchema)` to create a new message.
 */
export const ProfileEventSchema: GenMessage<ProfileEvent> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_event, 0);

/**
 * @generated from message mantrae.v1.GlobalEvent
 */
export type GlobalEvent = Message<"mantrae.v1.GlobalEvent"> & {
  /**
   * @generated from field: mantrae.v1.EventType event_type = 1;
   */
  eventType: EventType;

  /**
   * @generated from field: mantrae.v1.ResourceType resource_type = 2;
   */
  resourceType: ResourceType;

  /**
   * @generated from field: google.protobuf.Timestamp timestamp = 3;
   */
  timestamp?: Timestamp;

  /**
   * @generated from oneof mantrae.v1.GlobalEvent.resource
   */
  resource: {
    /**
     * @generated from field: mantrae.v1.User user = 10;
     */
    value: User;
    case: "user";
  } | {
    /**
     * @generated from field: mantrae.v1.DnsProvider dns_provider = 11;
     */
    value: DnsProvider;
    case: "dnsProvider";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message mantrae.v1.GlobalEvent.
 * Use `create(GlobalEventSchema)` to create a new message.
 */
export const GlobalEventSchema: GenMessage<GlobalEvent> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_event, 1);

/**
 * @generated from message mantrae.v1.StreamProfileEventsRequest
 */
export type StreamProfileEventsRequest = Message<"mantrae.v1.StreamProfileEventsRequest"> & {
  /**
   * @generated from field: int64 profile_id = 1;
   */
  profileId: bigint;

  /**
   * Filter by specific resource types
   *
   * @generated from field: repeated mantrae.v1.ResourceType resource_types = 2;
   */
  resourceTypes: ResourceType[];
};

/**
 * Describes the message mantrae.v1.StreamProfileEventsRequest.
 * Use `create(StreamProfileEventsRequestSchema)` to create a new message.
 */
export const StreamProfileEventsRequestSchema: GenMessage<StreamProfileEventsRequest> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_event, 2);

/**
 * @generated from message mantrae.v1.StreamGlobalEventsRequest
 */
export type StreamGlobalEventsRequest = Message<"mantrae.v1.StreamGlobalEventsRequest"> & {
  /**
   * Filter by specific resource types
   *
   * @generated from field: repeated mantrae.v1.ResourceType resource_types = 1;
   */
  resourceTypes: ResourceType[];
};

/**
 * Describes the message mantrae.v1.StreamGlobalEventsRequest.
 * Use `create(StreamGlobalEventsRequestSchema)` to create a new message.
 */
export const StreamGlobalEventsRequestSchema: GenMessage<StreamGlobalEventsRequest> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_event, 3);

/**
 * @generated from enum mantrae.v1.EventType
 */
export enum EventType {
  /**
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: EVENT_TYPE_CREATED = 1;
   */
  CREATED = 1,

  /**
   * @generated from enum value: EVENT_TYPE_UPDATED = 2;
   */
  UPDATED = 2,

  /**
   * @generated from enum value: EVENT_TYPE_DELETED = 3;
   */
  DELETED = 3,
}

/**
 * Describes the enum mantrae.v1.EventType.
 */
export const EventTypeSchema: GenEnum<EventType> = /*@__PURE__*/
  enumDesc(file_mantrae_v1_event, 0);

/**
 * @generated from enum mantrae.v1.ResourceType
 */
export enum ResourceType {
  /**
   * @generated from enum value: RESOURCE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: RESOURCE_TYPE_ROUTER = 1;
   */
  ROUTER = 1,

  /**
   * @generated from enum value: RESOURCE_TYPE_SERVICE = 2;
   */
  SERVICE = 2,

  /**
   * @generated from enum value: RESOURCE_TYPE_MIDDLEWARE = 3;
   */
  MIDDLEWARE = 3,

  /**
   * @generated from enum value: RESOURCE_TYPE_ENTRY_POINT = 4;
   */
  ENTRY_POINT = 4,

  /**
   * @generated from enum value: RESOURCE_TYPE_AUDIT_LOG = 5;
   */
  AUDIT_LOG = 5,

  /**
   * @generated from enum value: RESOURCE_TYPE_AGENT = 6;
   */
  AGENT = 6,

  /**
   * @generated from enum value: RESOURCE_TYPE_USER = 7;
   */
  USER = 7,

  /**
   * @generated from enum value: RESOURCE_TYPE_DNS_PROVIDER = 8;
   */
  DNS_PROVIDER = 8,
}

/**
 * Describes the enum mantrae.v1.ResourceType.
 */
export const ResourceTypeSchema: GenEnum<ResourceType> = /*@__PURE__*/
  enumDesc(file_mantrae_v1_event, 1);

/**
 * @generated from service mantrae.v1.EventService
 */
export const EventService: GenService<{
  /**
   * Profile-scoped events (routers, services, middlewares, entry points)
   *
   * @generated from rpc mantrae.v1.EventService.StreamProfileEvents
   */
  streamProfileEvents: {
    methodKind: "server_streaming";
    input: typeof StreamProfileEventsRequestSchema;
    output: typeof ProfileEventSchema;
  },
  /**
   * Global events (users, DNS providers) - admin only
   *
   * @generated from rpc mantrae.v1.EventService.StreamGlobalEvents
   */
  streamGlobalEvents: {
    methodKind: "server_streaming";
    input: typeof StreamGlobalEventsRequestSchema;
    output: typeof GlobalEventSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mantrae_v1_event, 0);

