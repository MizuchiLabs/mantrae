// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file mantrae/v1/agent.proto (package mantrae.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file mantrae/v1/agent.proto.
 */
export const file_mantrae_v1_agent: GenFile = /*@__PURE__*/
  fileDesc("ChZtYW50cmFlL3YxL2FnZW50LnByb3RvEgptYW50cmFlLnYxIrgCCglDb250YWluZXISCgoCaWQYASABKAkSDAoEbmFtZRgCIAEoCRIxCgZsYWJlbHMYAyADKAsyIS5tYW50cmFlLnYxLkNvbnRhaW5lci5MYWJlbHNFbnRyeRINCgVpbWFnZRgEIAEoCRIzCgdwb3J0bWFwGAUgAygLMiIubWFudHJhZS52MS5Db250YWluZXIuUG9ydG1hcEVudHJ5Eg4KBnN0YXR1cxgGIAEoCRIrCgdjcmVhdGVkGAcgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGi4KDFBvcnRtYXBFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAU6AjgBIqcBChNHZXRDb250YWluZXJSZXF1ZXN0EhAKCGhvc3RuYW1lGAEgASgJEhEKCXB1YmxpY19pcBgCIAEoCRITCgtwcml2YXRlX2lwcxgDIAMoCRIpCgpjb250YWluZXJzGAQgAygLMhUubWFudHJhZS52MS5Db250YWluZXISKwoHdXBkYXRlZBgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiFgoUR2V0Q29udGFpbmVyUmVzcG9uc2UiFAoSSGVhbHRoQ2hlY2tSZXF1ZXN0IjAKE0hlYWx0aENoZWNrUmVzcG9uc2USCgoCb2sYASABKAgSDQoFdG9rZW4YAiABKAkysQEKDEFnZW50U2VydmljZRJRCgxHZXRDb250YWluZXISHy5tYW50cmFlLnYxLkdldENvbnRhaW5lclJlcXVlc3QaIC5tYW50cmFlLnYxLkdldENvbnRhaW5lclJlc3BvbnNlEk4KC0hlYWx0aENoZWNrEh4ubWFudHJhZS52MS5IZWFsdGhDaGVja1JlcXVlc3QaHy5tYW50cmFlLnYxLkhlYWx0aENoZWNrUmVzcG9uc2VCpAEKDmNvbS5tYW50cmFlLnYxQgpBZ2VudFByb3RvUAFaPWdpdGh1Yi5jb20vbWl6dWNoaWxhYnMvbWFudHJhZS9wcm90by9nZW4vbWFudHJhZS92MTttYW50cmFldjGiAgNNWFiqAgpNYW50cmFlLlYxygIKTWFudHJhZVxWMeICFk1hbnRyYWVcVjFcR1BCTWV0YWRhdGHqAgtNYW50cmFlOjpWMWIGcHJvdG8z", [file_google_protobuf_timestamp]);

/**
 * @generated from message mantrae.v1.Container
 */
export type Container = Message<"mantrae.v1.Container"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: map<string, string> labels = 3;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: string image = 4;
   */
  image: string;

  /**
   * @generated from field: map<int32, int32> portmap = 5;
   */
  portmap: { [key: number]: number };

  /**
   * @generated from field: string status = 6;
   */
  status: string;

  /**
   * @generated from field: google.protobuf.Timestamp created = 7;
   */
  created?: Timestamp;
};

/**
 * Describes the message mantrae.v1.Container.
 * Use `create(ContainerSchema)` to create a new message.
 */
export const ContainerSchema: GenMessage<Container> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_agent, 0);

/**
 * @generated from message mantrae.v1.GetContainerRequest
 */
export type GetContainerRequest = Message<"mantrae.v1.GetContainerRequest"> & {
  /**
   * @generated from field: string hostname = 1;
   */
  hostname: string;

  /**
   * @generated from field: string public_ip = 2;
   */
  publicIp: string;

  /**
   * @generated from field: repeated string private_ips = 3;
   */
  privateIps: string[];

  /**
   * @generated from field: repeated mantrae.v1.Container containers = 4;
   */
  containers: Container[];

  /**
   * @generated from field: google.protobuf.Timestamp updated = 5;
   */
  updated?: Timestamp;
};

/**
 * Describes the message mantrae.v1.GetContainerRequest.
 * Use `create(GetContainerRequestSchema)` to create a new message.
 */
export const GetContainerRequestSchema: GenMessage<GetContainerRequest> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_agent, 1);

/**
 * @generated from message mantrae.v1.GetContainerResponse
 */
export type GetContainerResponse = Message<"mantrae.v1.GetContainerResponse"> & {
};

/**
 * Describes the message mantrae.v1.GetContainerResponse.
 * Use `create(GetContainerResponseSchema)` to create a new message.
 */
export const GetContainerResponseSchema: GenMessage<GetContainerResponse> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_agent, 2);

/**
 * @generated from message mantrae.v1.HealthCheckRequest
 */
export type HealthCheckRequest = Message<"mantrae.v1.HealthCheckRequest"> & {
};

/**
 * Describes the message mantrae.v1.HealthCheckRequest.
 * Use `create(HealthCheckRequestSchema)` to create a new message.
 */
export const HealthCheckRequestSchema: GenMessage<HealthCheckRequest> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_agent, 3);

/**
 * @generated from message mantrae.v1.HealthCheckResponse
 */
export type HealthCheckResponse = Message<"mantrae.v1.HealthCheckResponse"> & {
  /**
   * @generated from field: bool ok = 1;
   */
  ok: boolean;

  /**
   * @generated from field: string token = 2;
   */
  token: string;
};

/**
 * Describes the message mantrae.v1.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export const HealthCheckResponseSchema: GenMessage<HealthCheckResponse> = /*@__PURE__*/
  messageDesc(file_mantrae_v1_agent, 4);

/**
 * @generated from service mantrae.v1.AgentService
 */
export const AgentService: GenService<{
  /**
   * @generated from rpc mantrae.v1.AgentService.GetContainer
   */
  getContainer: {
    methodKind: "unary";
    input: typeof GetContainerRequestSchema;
    output: typeof GetContainerResponseSchema;
  },
  /**
   * @generated from rpc mantrae.v1.AgentService.HealthCheck
   */
  healthCheck: {
    methodKind: "unary";
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_mantrae_v1_agent, 0);

