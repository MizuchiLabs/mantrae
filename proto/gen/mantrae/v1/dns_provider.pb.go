// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: mantrae/v1/dns_provider.proto

package mantraev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DnsProviderType int32

const (
	DnsProviderType_DNS_PROVIDER_TYPE_UNSPECIFIED DnsProviderType = 0
	DnsProviderType_DNS_PROVIDER_TYPE_CLOUDFLARE  DnsProviderType = 1
	DnsProviderType_DNS_PROVIDER_TYPE_POWERDNS    DnsProviderType = 2
	DnsProviderType_DNS_PROVIDER_TYPE_TECHNITIUM  DnsProviderType = 3
)

// Enum value maps for DnsProviderType.
var (
	DnsProviderType_name = map[int32]string{
		0: "DNS_PROVIDER_TYPE_UNSPECIFIED",
		1: "DNS_PROVIDER_TYPE_CLOUDFLARE",
		2: "DNS_PROVIDER_TYPE_POWERDNS",
		3: "DNS_PROVIDER_TYPE_TECHNITIUM",
	}
	DnsProviderType_value = map[string]int32{
		"DNS_PROVIDER_TYPE_UNSPECIFIED": 0,
		"DNS_PROVIDER_TYPE_CLOUDFLARE":  1,
		"DNS_PROVIDER_TYPE_POWERDNS":    2,
		"DNS_PROVIDER_TYPE_TECHNITIUM":  3,
	}
)

func (x DnsProviderType) Enum() *DnsProviderType {
	p := new(DnsProviderType)
	*p = x
	return p
}

func (x DnsProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DnsProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_mantrae_v1_dns_provider_proto_enumTypes[0].Descriptor()
}

func (DnsProviderType) Type() protoreflect.EnumType {
	return &file_mantrae_v1_dns_provider_proto_enumTypes[0]
}

func (x DnsProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DnsProviderType.Descriptor instead.
func (DnsProviderType) EnumDescriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{0}
}

type DnsProvider struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          DnsProviderType        `protobuf:"varint,3,opt,name=type,proto3,enum=mantrae.v1.DnsProviderType" json:"type,omitempty"`
	Config        *DnsProviderConfig     `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsProvider) Reset() {
	*x = DnsProvider{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsProvider) ProtoMessage() {}

func (x *DnsProvider) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsProvider.ProtoReflect.Descriptor instead.
func (*DnsProvider) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{0}
}

func (x *DnsProvider) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DnsProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DnsProvider) GetType() DnsProviderType {
	if x != nil {
		return x.Type
	}
	return DnsProviderType_DNS_PROVIDER_TYPE_UNSPECIFIED
}

func (x *DnsProvider) GetConfig() *DnsProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *DnsProvider) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *DnsProvider) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DnsProvider) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type DnsProviderConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	ApiUrl        string                 `protobuf:"bytes,2,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Proxied       bool                   `protobuf:"varint,4,opt,name=proxied,proto3" json:"proxied,omitempty"`
	AutoUpdate    bool                   `protobuf:"varint,5,opt,name=auto_update,json=autoUpdate,proto3" json:"auto_update,omitempty"`
	ZoneType      string                 `protobuf:"bytes,6,opt,name=zone_type,json=zoneType,proto3" json:"zone_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DnsProviderConfig) Reset() {
	*x = DnsProviderConfig{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DnsProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DnsProviderConfig) ProtoMessage() {}

func (x *DnsProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DnsProviderConfig.ProtoReflect.Descriptor instead.
func (*DnsProviderConfig) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{1}
}

func (x *DnsProviderConfig) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *DnsProviderConfig) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

func (x *DnsProviderConfig) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *DnsProviderConfig) GetProxied() bool {
	if x != nil {
		return x.Proxied
	}
	return false
}

func (x *DnsProviderConfig) GetAutoUpdate() bool {
	if x != nil {
		return x.AutoUpdate
	}
	return false
}

func (x *DnsProviderConfig) GetZoneType() string {
	if x != nil {
		return x.ZoneType
	}
	return ""
}

type GetDnsProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDnsProviderRequest) Reset() {
	*x = GetDnsProviderRequest{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDnsProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDnsProviderRequest) ProtoMessage() {}

func (x *GetDnsProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDnsProviderRequest.ProtoReflect.Descriptor instead.
func (*GetDnsProviderRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{2}
}

func (x *GetDnsProviderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDnsProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DnsProvider   *DnsProvider           `protobuf:"bytes,1,opt,name=dns_provider,json=dnsProvider,proto3" json:"dns_provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDnsProviderResponse) Reset() {
	*x = GetDnsProviderResponse{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDnsProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDnsProviderResponse) ProtoMessage() {}

func (x *GetDnsProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDnsProviderResponse.ProtoReflect.Descriptor instead.
func (*GetDnsProviderResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{3}
}

func (x *GetDnsProviderResponse) GetDnsProvider() *DnsProvider {
	if x != nil {
		return x.DnsProvider
	}
	return nil
}

type CreateDnsProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          DnsProviderType        `protobuf:"varint,2,opt,name=type,proto3,enum=mantrae.v1.DnsProviderType" json:"type,omitempty"`
	Config        *DnsProviderConfig     `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	IsActive      bool                   `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDnsProviderRequest) Reset() {
	*x = CreateDnsProviderRequest{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDnsProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDnsProviderRequest) ProtoMessage() {}

func (x *CreateDnsProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDnsProviderRequest.ProtoReflect.Descriptor instead.
func (*CreateDnsProviderRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDnsProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDnsProviderRequest) GetType() DnsProviderType {
	if x != nil {
		return x.Type
	}
	return DnsProviderType_DNS_PROVIDER_TYPE_UNSPECIFIED
}

func (x *CreateDnsProviderRequest) GetConfig() *DnsProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateDnsProviderRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type CreateDnsProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DnsProvider   *DnsProvider           `protobuf:"bytes,1,opt,name=dns_provider,json=dnsProvider,proto3" json:"dns_provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDnsProviderResponse) Reset() {
	*x = CreateDnsProviderResponse{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDnsProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDnsProviderResponse) ProtoMessage() {}

func (x *CreateDnsProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDnsProviderResponse.ProtoReflect.Descriptor instead.
func (*CreateDnsProviderResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{5}
}

func (x *CreateDnsProviderResponse) GetDnsProvider() *DnsProvider {
	if x != nil {
		return x.DnsProvider
	}
	return nil
}

type UpdateDnsProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          DnsProviderType        `protobuf:"varint,3,opt,name=type,proto3,enum=mantrae.v1.DnsProviderType" json:"type,omitempty"`
	Config        *DnsProviderConfig     `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	IsActive      bool                   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDnsProviderRequest) Reset() {
	*x = UpdateDnsProviderRequest{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDnsProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDnsProviderRequest) ProtoMessage() {}

func (x *UpdateDnsProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDnsProviderRequest.ProtoReflect.Descriptor instead.
func (*UpdateDnsProviderRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDnsProviderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDnsProviderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDnsProviderRequest) GetType() DnsProviderType {
	if x != nil {
		return x.Type
	}
	return DnsProviderType_DNS_PROVIDER_TYPE_UNSPECIFIED
}

func (x *UpdateDnsProviderRequest) GetConfig() *DnsProviderConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateDnsProviderRequest) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type UpdateDnsProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DnsProvider   *DnsProvider           `protobuf:"bytes,1,opt,name=dns_provider,json=dnsProvider,proto3" json:"dns_provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDnsProviderResponse) Reset() {
	*x = UpdateDnsProviderResponse{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDnsProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDnsProviderResponse) ProtoMessage() {}

func (x *UpdateDnsProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDnsProviderResponse.ProtoReflect.Descriptor instead.
func (*UpdateDnsProviderResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDnsProviderResponse) GetDnsProvider() *DnsProvider {
	if x != nil {
		return x.DnsProvider
	}
	return nil
}

type DeleteDnsProviderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDnsProviderRequest) Reset() {
	*x = DeleteDnsProviderRequest{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDnsProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDnsProviderRequest) ProtoMessage() {}

func (x *DeleteDnsProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDnsProviderRequest.ProtoReflect.Descriptor instead.
func (*DeleteDnsProviderRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteDnsProviderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteDnsProviderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDnsProviderResponse) Reset() {
	*x = DeleteDnsProviderResponse{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDnsProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDnsProviderResponse) ProtoMessage() {}

func (x *DeleteDnsProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDnsProviderResponse.ProtoReflect.Descriptor instead.
func (*DeleteDnsProviderResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{9}
}

type ListDnsProvidersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         *int64                 `protobuf:"varint,1,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int64                 `protobuf:"varint,2,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDnsProvidersRequest) Reset() {
	*x = ListDnsProvidersRequest{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDnsProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDnsProvidersRequest) ProtoMessage() {}

func (x *ListDnsProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDnsProvidersRequest.ProtoReflect.Descriptor instead.
func (*ListDnsProvidersRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{10}
}

func (x *ListDnsProvidersRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListDnsProvidersRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type ListDnsProvidersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DnsProviders  []*DnsProvider         `protobuf:"bytes,1,rep,name=dns_providers,json=dnsProviders,proto3" json:"dns_providers,omitempty"`
	TotalCount    int64                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDnsProvidersResponse) Reset() {
	*x = ListDnsProvidersResponse{}
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDnsProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDnsProvidersResponse) ProtoMessage() {}

func (x *ListDnsProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_dns_provider_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDnsProvidersResponse.ProtoReflect.Descriptor instead.
func (*ListDnsProvidersResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_dns_provider_proto_rawDescGZIP(), []int{11}
}

func (x *ListDnsProvidersResponse) GetDnsProviders() []*DnsProvider {
	if x != nil {
		return x.DnsProviders
	}
	return nil
}

func (x *ListDnsProvidersResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_mantrae_v1_dns_provider_proto protoreflect.FileDescriptor

const file_mantrae_v1_dns_provider_proto_rawDesc = "" +
	"\n" +
	"\x1dmantrae/v1/dns_provider.proto\x12\n" +
	"mantrae.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xac\x02\n" +
	"\vDnsProvider\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12/\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.mantrae.v1.DnsProviderTypeR\x04type\x125\n" +
	"\x06config\x18\x04 \x01(\v2\x1d.mantrae.v1.DnsProviderConfigR\x06config\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xad\x01\n" +
	"\x11DnsProviderConfig\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\x12\x17\n" +
	"\aapi_url\x18\x02 \x01(\tR\x06apiUrl\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x18\n" +
	"\aproxied\x18\x04 \x01(\bR\aproxied\x12\x1f\n" +
	"\vauto_update\x18\x05 \x01(\bR\n" +
	"autoUpdate\x12\x1b\n" +
	"\tzone_type\x18\x06 \x01(\tR\bzoneType\"3\n" +
	"\x15GetDnsProviderRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\x03B\n" +
	"\xbaH\a\xc8\x01\x01\"\x02 \x00R\x02id\"T\n" +
	"\x16GetDnsProviderResponse\x12:\n" +
	"\fdns_provider\x18\x01 \x01(\v2\x17.mantrae.v1.DnsProviderR\vdnsProvider\"\xcc\x01\n" +
	"\x18CreateDnsProviderRequest\x12\x1e\n" +
	"\x04name\x18\x01 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x01R\x04name\x12<\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1b.mantrae.v1.DnsProviderTypeB\v\xbaH\b\xc8\x01\x01\x82\x01\x02\x10\x01R\x04type\x125\n" +
	"\x06config\x18\x03 \x01(\v2\x1d.mantrae.v1.DnsProviderConfigR\x06config\x12\x1b\n" +
	"\tis_active\x18\x04 \x01(\bR\bisActive\"W\n" +
	"\x19CreateDnsProviderResponse\x12:\n" +
	"\fdns_provider\x18\x01 \x01(\v2\x17.mantrae.v1.DnsProviderR\vdnsProvider\"\xe8\x01\n" +
	"\x18UpdateDnsProviderRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\x03B\n" +
	"\xbaH\a\xc8\x01\x01\"\x02 \x00R\x02id\x12\x1e\n" +
	"\x04name\x18\x02 \x01(\tB\n" +
	"\xbaH\a\xc8\x01\x01r\x02\x10\x01R\x04name\x12<\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1b.mantrae.v1.DnsProviderTypeB\v\xbaH\b\xc8\x01\x01\x82\x01\x02\x10\x01R\x04type\x125\n" +
	"\x06config\x18\x04 \x01(\v2\x1d.mantrae.v1.DnsProviderConfigR\x06config\x12\x1b\n" +
	"\tis_active\x18\x05 \x01(\bR\bisActive\"W\n" +
	"\x19UpdateDnsProviderResponse\x12:\n" +
	"\fdns_provider\x18\x01 \x01(\v2\x17.mantrae.v1.DnsProviderR\vdnsProvider\"6\n" +
	"\x18DeleteDnsProviderRequest\x12\x1a\n" +
	"\x02id\x18\x01 \x01(\x03B\n" +
	"\xbaH\a\xc8\x01\x01\"\x02 \x00R\x02id\"\x1b\n" +
	"\x19DeleteDnsProviderResponse\"\xc7\x01\n" +
	"\x17ListDnsProvidersRequest\x12q\n" +
	"\x05limit\x18\x01 \x01(\x03BV\xbaHS\xba\x01P\n" +
	"\vlimit.valid\x12)limit must be either -1 or greater than 0\x1a\x16this == -1 || this > 0H\x00R\x05limit\x88\x01\x01\x12$\n" +
	"\x06offset\x18\x02 \x01(\x03B\a\xbaH\x04\"\x02(\x00H\x01R\x06offset\x88\x01\x01B\b\n" +
	"\x06_limitB\t\n" +
	"\a_offset\"y\n" +
	"\x18ListDnsProvidersResponse\x12<\n" +
	"\rdns_providers\x18\x01 \x03(\v2\x17.mantrae.v1.DnsProviderR\fdnsProviders\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x03R\n" +
	"totalCount*\x98\x01\n" +
	"\x0fDnsProviderType\x12!\n" +
	"\x1dDNS_PROVIDER_TYPE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cDNS_PROVIDER_TYPE_CLOUDFLARE\x10\x01\x12\x1e\n" +
	"\x1aDNS_PROVIDER_TYPE_POWERDNS\x10\x02\x12 \n" +
	"\x1cDNS_PROVIDER_TYPE_TECHNITIUM\x10\x032\xfc\x03\n" +
	"\x12DnsProviderService\x12\\\n" +
	"\x0eGetDnsProvider\x12!.mantrae.v1.GetDnsProviderRequest\x1a\".mantrae.v1.GetDnsProviderResponse\"\x03\x90\x02\x01\x12`\n" +
	"\x11CreateDnsProvider\x12$.mantrae.v1.CreateDnsProviderRequest\x1a%.mantrae.v1.CreateDnsProviderResponse\x12`\n" +
	"\x11UpdateDnsProvider\x12$.mantrae.v1.UpdateDnsProviderRequest\x1a%.mantrae.v1.UpdateDnsProviderResponse\x12`\n" +
	"\x11DeleteDnsProvider\x12$.mantrae.v1.DeleteDnsProviderRequest\x1a%.mantrae.v1.DeleteDnsProviderResponse\x12b\n" +
	"\x10ListDnsProviders\x12#.mantrae.v1.ListDnsProvidersRequest\x1a$.mantrae.v1.ListDnsProvidersResponse\"\x03\x90\x02\x01B\xaa\x01\n" +
	"\x0ecom.mantrae.v1B\x10DnsProviderProtoP\x01Z=github.com/mizuchilabs/mantrae/proto/gen/mantrae/v1;mantraev1\xa2\x02\x03MXX\xaa\x02\n" +
	"Mantrae.V1\xca\x02\n" +
	"Mantrae\\V1\xe2\x02\x16Mantrae\\V1\\GPBMetadata\xea\x02\vMantrae::V1b\x06proto3"

var (
	file_mantrae_v1_dns_provider_proto_rawDescOnce sync.Once
	file_mantrae_v1_dns_provider_proto_rawDescData []byte
)

func file_mantrae_v1_dns_provider_proto_rawDescGZIP() []byte {
	file_mantrae_v1_dns_provider_proto_rawDescOnce.Do(func() {
		file_mantrae_v1_dns_provider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mantrae_v1_dns_provider_proto_rawDesc), len(file_mantrae_v1_dns_provider_proto_rawDesc)))
	})
	return file_mantrae_v1_dns_provider_proto_rawDescData
}

var file_mantrae_v1_dns_provider_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mantrae_v1_dns_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_mantrae_v1_dns_provider_proto_goTypes = []any{
	(DnsProviderType)(0),              // 0: mantrae.v1.DnsProviderType
	(*DnsProvider)(nil),               // 1: mantrae.v1.DnsProvider
	(*DnsProviderConfig)(nil),         // 2: mantrae.v1.DnsProviderConfig
	(*GetDnsProviderRequest)(nil),     // 3: mantrae.v1.GetDnsProviderRequest
	(*GetDnsProviderResponse)(nil),    // 4: mantrae.v1.GetDnsProviderResponse
	(*CreateDnsProviderRequest)(nil),  // 5: mantrae.v1.CreateDnsProviderRequest
	(*CreateDnsProviderResponse)(nil), // 6: mantrae.v1.CreateDnsProviderResponse
	(*UpdateDnsProviderRequest)(nil),  // 7: mantrae.v1.UpdateDnsProviderRequest
	(*UpdateDnsProviderResponse)(nil), // 8: mantrae.v1.UpdateDnsProviderResponse
	(*DeleteDnsProviderRequest)(nil),  // 9: mantrae.v1.DeleteDnsProviderRequest
	(*DeleteDnsProviderResponse)(nil), // 10: mantrae.v1.DeleteDnsProviderResponse
	(*ListDnsProvidersRequest)(nil),   // 11: mantrae.v1.ListDnsProvidersRequest
	(*ListDnsProvidersResponse)(nil),  // 12: mantrae.v1.ListDnsProvidersResponse
	(*timestamppb.Timestamp)(nil),     // 13: google.protobuf.Timestamp
}
var file_mantrae_v1_dns_provider_proto_depIdxs = []int32{
	0,  // 0: mantrae.v1.DnsProvider.type:type_name -> mantrae.v1.DnsProviderType
	2,  // 1: mantrae.v1.DnsProvider.config:type_name -> mantrae.v1.DnsProviderConfig
	13, // 2: mantrae.v1.DnsProvider.created_at:type_name -> google.protobuf.Timestamp
	13, // 3: mantrae.v1.DnsProvider.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 4: mantrae.v1.GetDnsProviderResponse.dns_provider:type_name -> mantrae.v1.DnsProvider
	0,  // 5: mantrae.v1.CreateDnsProviderRequest.type:type_name -> mantrae.v1.DnsProviderType
	2,  // 6: mantrae.v1.CreateDnsProviderRequest.config:type_name -> mantrae.v1.DnsProviderConfig
	1,  // 7: mantrae.v1.CreateDnsProviderResponse.dns_provider:type_name -> mantrae.v1.DnsProvider
	0,  // 8: mantrae.v1.UpdateDnsProviderRequest.type:type_name -> mantrae.v1.DnsProviderType
	2,  // 9: mantrae.v1.UpdateDnsProviderRequest.config:type_name -> mantrae.v1.DnsProviderConfig
	1,  // 10: mantrae.v1.UpdateDnsProviderResponse.dns_provider:type_name -> mantrae.v1.DnsProvider
	1,  // 11: mantrae.v1.ListDnsProvidersResponse.dns_providers:type_name -> mantrae.v1.DnsProvider
	3,  // 12: mantrae.v1.DnsProviderService.GetDnsProvider:input_type -> mantrae.v1.GetDnsProviderRequest
	5,  // 13: mantrae.v1.DnsProviderService.CreateDnsProvider:input_type -> mantrae.v1.CreateDnsProviderRequest
	7,  // 14: mantrae.v1.DnsProviderService.UpdateDnsProvider:input_type -> mantrae.v1.UpdateDnsProviderRequest
	9,  // 15: mantrae.v1.DnsProviderService.DeleteDnsProvider:input_type -> mantrae.v1.DeleteDnsProviderRequest
	11, // 16: mantrae.v1.DnsProviderService.ListDnsProviders:input_type -> mantrae.v1.ListDnsProvidersRequest
	4,  // 17: mantrae.v1.DnsProviderService.GetDnsProvider:output_type -> mantrae.v1.GetDnsProviderResponse
	6,  // 18: mantrae.v1.DnsProviderService.CreateDnsProvider:output_type -> mantrae.v1.CreateDnsProviderResponse
	8,  // 19: mantrae.v1.DnsProviderService.UpdateDnsProvider:output_type -> mantrae.v1.UpdateDnsProviderResponse
	10, // 20: mantrae.v1.DnsProviderService.DeleteDnsProvider:output_type -> mantrae.v1.DeleteDnsProviderResponse
	12, // 21: mantrae.v1.DnsProviderService.ListDnsProviders:output_type -> mantrae.v1.ListDnsProvidersResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_mantrae_v1_dns_provider_proto_init() }
func file_mantrae_v1_dns_provider_proto_init() {
	if File_mantrae_v1_dns_provider_proto != nil {
		return
	}
	file_mantrae_v1_dns_provider_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mantrae_v1_dns_provider_proto_rawDesc), len(file_mantrae_v1_dns_provider_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mantrae_v1_dns_provider_proto_goTypes,
		DependencyIndexes: file_mantrae_v1_dns_provider_proto_depIdxs,
		EnumInfos:         file_mantrae_v1_dns_provider_proto_enumTypes,
		MessageInfos:      file_mantrae_v1_dns_provider_proto_msgTypes,
	}.Build()
	File_mantrae_v1_dns_provider_proto = out.File
	file_mantrae_v1_dns_provider_proto_goTypes = nil
	file_mantrae_v1_dns_provider_proto_depIdxs = nil
}
