// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: mantrae/v1/event.proto

package mantraev1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	EventType_EVENT_TYPE_CREATED     EventType = 1
	EventType_EVENT_TYPE_UPDATED     EventType = 2
	EventType_EVENT_TYPE_DELETED     EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_CREATED",
		2: "EVENT_TYPE_UPDATED",
		3: "EVENT_TYPE_DELETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_CREATED":     1,
		"EVENT_TYPE_UPDATED":     2,
		"EVENT_TYPE_DELETED":     3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_mantrae_v1_event_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_mantrae_v1_event_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{0}
}

type ResourceType int32

const (
	ResourceType_RESOURCE_TYPE_UNSPECIFIED  ResourceType = 0
	ResourceType_RESOURCE_TYPE_ROUTER       ResourceType = 1
	ResourceType_RESOURCE_TYPE_SERVICE      ResourceType = 2
	ResourceType_RESOURCE_TYPE_MIDDLEWARE   ResourceType = 3
	ResourceType_RESOURCE_TYPE_ENTRY_POINT  ResourceType = 4
	ResourceType_RESOURCE_TYPE_AUDIT_LOG    ResourceType = 5
	ResourceType_RESOURCE_TYPE_AGENT        ResourceType = 6
	ResourceType_RESOURCE_TYPE_USER         ResourceType = 7
	ResourceType_RESOURCE_TYPE_DNS_PROVIDER ResourceType = 8
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "RESOURCE_TYPE_UNSPECIFIED",
		1: "RESOURCE_TYPE_ROUTER",
		2: "RESOURCE_TYPE_SERVICE",
		3: "RESOURCE_TYPE_MIDDLEWARE",
		4: "RESOURCE_TYPE_ENTRY_POINT",
		5: "RESOURCE_TYPE_AUDIT_LOG",
		6: "RESOURCE_TYPE_AGENT",
		7: "RESOURCE_TYPE_USER",
		8: "RESOURCE_TYPE_DNS_PROVIDER",
	}
	ResourceType_value = map[string]int32{
		"RESOURCE_TYPE_UNSPECIFIED":  0,
		"RESOURCE_TYPE_ROUTER":       1,
		"RESOURCE_TYPE_SERVICE":      2,
		"RESOURCE_TYPE_MIDDLEWARE":   3,
		"RESOURCE_TYPE_ENTRY_POINT":  4,
		"RESOURCE_TYPE_AUDIT_LOG":    5,
		"RESOURCE_TYPE_AGENT":        6,
		"RESOURCE_TYPE_USER":         7,
		"RESOURCE_TYPE_DNS_PROVIDER": 8,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_mantrae_v1_event_proto_enumTypes[1].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_mantrae_v1_event_proto_enumTypes[1]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{1}
}

type ProfileEvent struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	EventType    EventType              `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=mantrae.v1.EventType" json:"event_type,omitempty"`
	ResourceType ResourceType           `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=mantrae.v1.ResourceType" json:"resource_type,omitempty"`
	ProfileId    int64                  `protobuf:"varint,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Resource:
	//
	//	*ProfileEvent_Router
	//	*ProfileEvent_Service
	//	*ProfileEvent_Middleware
	//	*ProfileEvent_EntryPoint
	//	*ProfileEvent_Agent
	//	*ProfileEvent_AuditLog
	Resource      isProfileEvent_Resource `protobuf_oneof:"resource"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileEvent) Reset() {
	*x = ProfileEvent{}
	mi := &file_mantrae_v1_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileEvent) ProtoMessage() {}

func (x *ProfileEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileEvent.ProtoReflect.Descriptor instead.
func (*ProfileEvent) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *ProfileEvent) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *ProfileEvent) GetProfileId() int64 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *ProfileEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProfileEvent) GetResource() isProfileEvent_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ProfileEvent) GetRouter() *Router {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_Router); ok {
			return x.Router
		}
	}
	return nil
}

func (x *ProfileEvent) GetService() *Service {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_Service); ok {
			return x.Service
		}
	}
	return nil
}

func (x *ProfileEvent) GetMiddleware() *Middleware {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_Middleware); ok {
			return x.Middleware
		}
	}
	return nil
}

func (x *ProfileEvent) GetEntryPoint() *EntryPoint {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_EntryPoint); ok {
			return x.EntryPoint
		}
	}
	return nil
}

func (x *ProfileEvent) GetAgent() *Agent {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_Agent); ok {
			return x.Agent
		}
	}
	return nil
}

func (x *ProfileEvent) GetAuditLog() *AuditLog {
	if x != nil {
		if x, ok := x.Resource.(*ProfileEvent_AuditLog); ok {
			return x.AuditLog
		}
	}
	return nil
}

type isProfileEvent_Resource interface {
	isProfileEvent_Resource()
}

type ProfileEvent_Router struct {
	Router *Router `protobuf:"bytes,10,opt,name=router,proto3,oneof"`
}

type ProfileEvent_Service struct {
	Service *Service `protobuf:"bytes,11,opt,name=service,proto3,oneof"`
}

type ProfileEvent_Middleware struct {
	Middleware *Middleware `protobuf:"bytes,12,opt,name=middleware,proto3,oneof"`
}

type ProfileEvent_EntryPoint struct {
	EntryPoint *EntryPoint `protobuf:"bytes,13,opt,name=entry_point,json=entryPoint,proto3,oneof"`
}

type ProfileEvent_Agent struct {
	Agent *Agent `protobuf:"bytes,14,opt,name=agent,proto3,oneof"`
}

type ProfileEvent_AuditLog struct {
	AuditLog *AuditLog `protobuf:"bytes,15,opt,name=audit_log,json=auditLog,proto3,oneof"`
}

func (*ProfileEvent_Router) isProfileEvent_Resource() {}

func (*ProfileEvent_Service) isProfileEvent_Resource() {}

func (*ProfileEvent_Middleware) isProfileEvent_Resource() {}

func (*ProfileEvent_EntryPoint) isProfileEvent_Resource() {}

func (*ProfileEvent_Agent) isProfileEvent_Resource() {}

func (*ProfileEvent_AuditLog) isProfileEvent_Resource() {}

type GlobalEvent struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	EventType    EventType              `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=mantrae.v1.EventType" json:"event_type,omitempty"`
	ResourceType ResourceType           `protobuf:"varint,2,opt,name=resource_type,json=resourceType,proto3,enum=mantrae.v1.ResourceType" json:"resource_type,omitempty"`
	Timestamp    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Resource:
	//
	//	*GlobalEvent_User
	//	*GlobalEvent_DnsProvider
	Resource      isGlobalEvent_Resource `protobuf_oneof:"resource"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalEvent) Reset() {
	*x = GlobalEvent{}
	mi := &file_mantrae_v1_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEvent) ProtoMessage() {}

func (x *GlobalEvent) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEvent.ProtoReflect.Descriptor instead.
func (*GlobalEvent) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{1}
}

func (x *GlobalEvent) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *GlobalEvent) GetResourceType() ResourceType {
	if x != nil {
		return x.ResourceType
	}
	return ResourceType_RESOURCE_TYPE_UNSPECIFIED
}

func (x *GlobalEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GlobalEvent) GetResource() isGlobalEvent_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *GlobalEvent) GetUser() *User {
	if x != nil {
		if x, ok := x.Resource.(*GlobalEvent_User); ok {
			return x.User
		}
	}
	return nil
}

func (x *GlobalEvent) GetDnsProvider() *DnsProvider {
	if x != nil {
		if x, ok := x.Resource.(*GlobalEvent_DnsProvider); ok {
			return x.DnsProvider
		}
	}
	return nil
}

type isGlobalEvent_Resource interface {
	isGlobalEvent_Resource()
}

type GlobalEvent_User struct {
	User *User `protobuf:"bytes,10,opt,name=user,proto3,oneof"`
}

type GlobalEvent_DnsProvider struct {
	DnsProvider *DnsProvider `protobuf:"bytes,11,opt,name=dns_provider,json=dnsProvider,proto3,oneof"`
}

func (*GlobalEvent_User) isGlobalEvent_Resource() {}

func (*GlobalEvent_DnsProvider) isGlobalEvent_Resource() {}

type ProfileEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileId     int64                  `protobuf:"varint,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	ResourceTypes []ResourceType         `protobuf:"varint,2,rep,packed,name=resource_types,json=resourceTypes,proto3,enum=mantrae.v1.ResourceType" json:"resource_types,omitempty"` // Filter by specific resource types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileEventsRequest) Reset() {
	*x = ProfileEventsRequest{}
	mi := &file_mantrae_v1_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileEventsRequest) ProtoMessage() {}

func (x *ProfileEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileEventsRequest.ProtoReflect.Descriptor instead.
func (*ProfileEventsRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileEventsRequest) GetProfileId() int64 {
	if x != nil {
		return x.ProfileId
	}
	return 0
}

func (x *ProfileEventsRequest) GetResourceTypes() []ResourceType {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

type ProfileEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *ProfileEvent          `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProfileEventsResponse) Reset() {
	*x = ProfileEventsResponse{}
	mi := &file_mantrae_v1_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProfileEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileEventsResponse) ProtoMessage() {}

func (x *ProfileEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileEventsResponse.ProtoReflect.Descriptor instead.
func (*ProfileEventsResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{3}
}

func (x *ProfileEventsResponse) GetEvent() *ProfileEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type GlobalEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ResourceTypes []ResourceType         `protobuf:"varint,1,rep,packed,name=resource_types,json=resourceTypes,proto3,enum=mantrae.v1.ResourceType" json:"resource_types,omitempty"` // Filter by specific resource types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalEventsRequest) Reset() {
	*x = GlobalEventsRequest{}
	mi := &file_mantrae_v1_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEventsRequest) ProtoMessage() {}

func (x *GlobalEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEventsRequest.ProtoReflect.Descriptor instead.
func (*GlobalEventsRequest) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{4}
}

func (x *GlobalEventsRequest) GetResourceTypes() []ResourceType {
	if x != nil {
		return x.ResourceTypes
	}
	return nil
}

type GlobalEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *GlobalEvent           `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalEventsResponse) Reset() {
	*x = GlobalEventsResponse{}
	mi := &file_mantrae_v1_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEventsResponse) ProtoMessage() {}

func (x *GlobalEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mantrae_v1_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEventsResponse.ProtoReflect.Descriptor instead.
func (*GlobalEventsResponse) Descriptor() ([]byte, []int) {
	return file_mantrae_v1_event_proto_rawDescGZIP(), []int{5}
}

func (x *GlobalEventsResponse) GetEvent() *GlobalEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var File_mantrae_v1_event_proto protoreflect.FileDescriptor

var file_mantrae_v1_event_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x6c, 0x6f, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76,
	0x31, 0x2f, 0x64, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x17, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x04, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72,
	0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x77, 0x61, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x05,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x61, 0x6e,
	0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x48, 0x00, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x0a, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x0b, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d,
	0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x3c, 0x0a, 0x0c, 0x64, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0a, 0xba, 0x48, 0x07, 0xc8, 0x01, 0x01, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x47,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x45, 0x0a, 0x14, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x6f, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x8d, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x52, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49,
	0x44, 0x44, 0x4c, 0x45, 0x57, 0x41, 0x52, 0x45, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54,
	0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x06, 0x12,
	0x16, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x45, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4e, 0x53, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x10, 0x08, 0x32, 0xbb, 0x01, 0x0a, 0x0c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01,
	0x12, 0x53, 0x0a, 0x0c, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x30, 0x01, 0x42, 0xa4, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x69, 0x7a, 0x75, 0x63, 0x68, 0x69, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x6d,
	0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x6d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x6e, 0x74,
	0x72, 0x61, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x4d, 0x61,
	0x6e, 0x74, 0x72, 0x61, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0a, 0x4d, 0x61, 0x6e, 0x74, 0x72,
	0x61, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0b, 0x4d, 0x61, 0x6e, 0x74, 0x72, 0x61, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_mantrae_v1_event_proto_rawDescOnce sync.Once
	file_mantrae_v1_event_proto_rawDescData []byte
)

func file_mantrae_v1_event_proto_rawDescGZIP() []byte {
	file_mantrae_v1_event_proto_rawDescOnce.Do(func() {
		file_mantrae_v1_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mantrae_v1_event_proto_rawDesc), len(file_mantrae_v1_event_proto_rawDesc)))
	})
	return file_mantrae_v1_event_proto_rawDescData
}

var file_mantrae_v1_event_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mantrae_v1_event_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mantrae_v1_event_proto_goTypes = []any{
	(EventType)(0),                // 0: mantrae.v1.EventType
	(ResourceType)(0),             // 1: mantrae.v1.ResourceType
	(*ProfileEvent)(nil),          // 2: mantrae.v1.ProfileEvent
	(*GlobalEvent)(nil),           // 3: mantrae.v1.GlobalEvent
	(*ProfileEventsRequest)(nil),  // 4: mantrae.v1.ProfileEventsRequest
	(*ProfileEventsResponse)(nil), // 5: mantrae.v1.ProfileEventsResponse
	(*GlobalEventsRequest)(nil),   // 6: mantrae.v1.GlobalEventsRequest
	(*GlobalEventsResponse)(nil),  // 7: mantrae.v1.GlobalEventsResponse
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
	(*Router)(nil),                // 9: mantrae.v1.Router
	(*Service)(nil),               // 10: mantrae.v1.Service
	(*Middleware)(nil),            // 11: mantrae.v1.Middleware
	(*EntryPoint)(nil),            // 12: mantrae.v1.EntryPoint
	(*Agent)(nil),                 // 13: mantrae.v1.Agent
	(*AuditLog)(nil),              // 14: mantrae.v1.AuditLog
	(*User)(nil),                  // 15: mantrae.v1.User
	(*DnsProvider)(nil),           // 16: mantrae.v1.DnsProvider
}
var file_mantrae_v1_event_proto_depIdxs = []int32{
	0,  // 0: mantrae.v1.ProfileEvent.event_type:type_name -> mantrae.v1.EventType
	1,  // 1: mantrae.v1.ProfileEvent.resource_type:type_name -> mantrae.v1.ResourceType
	8,  // 2: mantrae.v1.ProfileEvent.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 3: mantrae.v1.ProfileEvent.router:type_name -> mantrae.v1.Router
	10, // 4: mantrae.v1.ProfileEvent.service:type_name -> mantrae.v1.Service
	11, // 5: mantrae.v1.ProfileEvent.middleware:type_name -> mantrae.v1.Middleware
	12, // 6: mantrae.v1.ProfileEvent.entry_point:type_name -> mantrae.v1.EntryPoint
	13, // 7: mantrae.v1.ProfileEvent.agent:type_name -> mantrae.v1.Agent
	14, // 8: mantrae.v1.ProfileEvent.audit_log:type_name -> mantrae.v1.AuditLog
	0,  // 9: mantrae.v1.GlobalEvent.event_type:type_name -> mantrae.v1.EventType
	1,  // 10: mantrae.v1.GlobalEvent.resource_type:type_name -> mantrae.v1.ResourceType
	8,  // 11: mantrae.v1.GlobalEvent.timestamp:type_name -> google.protobuf.Timestamp
	15, // 12: mantrae.v1.GlobalEvent.user:type_name -> mantrae.v1.User
	16, // 13: mantrae.v1.GlobalEvent.dns_provider:type_name -> mantrae.v1.DnsProvider
	1,  // 14: mantrae.v1.ProfileEventsRequest.resource_types:type_name -> mantrae.v1.ResourceType
	2,  // 15: mantrae.v1.ProfileEventsResponse.event:type_name -> mantrae.v1.ProfileEvent
	1,  // 16: mantrae.v1.GlobalEventsRequest.resource_types:type_name -> mantrae.v1.ResourceType
	3,  // 17: mantrae.v1.GlobalEventsResponse.event:type_name -> mantrae.v1.GlobalEvent
	4,  // 18: mantrae.v1.EventService.ProfileEvents:input_type -> mantrae.v1.ProfileEventsRequest
	6,  // 19: mantrae.v1.EventService.GlobalEvents:input_type -> mantrae.v1.GlobalEventsRequest
	5,  // 20: mantrae.v1.EventService.ProfileEvents:output_type -> mantrae.v1.ProfileEventsResponse
	7,  // 21: mantrae.v1.EventService.GlobalEvents:output_type -> mantrae.v1.GlobalEventsResponse
	20, // [20:22] is the sub-list for method output_type
	18, // [18:20] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_mantrae_v1_event_proto_init() }
func file_mantrae_v1_event_proto_init() {
	if File_mantrae_v1_event_proto != nil {
		return
	}
	file_mantrae_v1_agent_proto_init()
	file_mantrae_v1_auditlog_proto_init()
	file_mantrae_v1_dns_provider_proto_init()
	file_mantrae_v1_entry_point_proto_init()
	file_mantrae_v1_middleware_proto_init()
	file_mantrae_v1_router_proto_init()
	file_mantrae_v1_service_proto_init()
	file_mantrae_v1_user_proto_init()
	file_mantrae_v1_event_proto_msgTypes[0].OneofWrappers = []any{
		(*ProfileEvent_Router)(nil),
		(*ProfileEvent_Service)(nil),
		(*ProfileEvent_Middleware)(nil),
		(*ProfileEvent_EntryPoint)(nil),
		(*ProfileEvent_Agent)(nil),
		(*ProfileEvent_AuditLog)(nil),
	}
	file_mantrae_v1_event_proto_msgTypes[1].OneofWrappers = []any{
		(*GlobalEvent_User)(nil),
		(*GlobalEvent_DnsProvider)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mantrae_v1_event_proto_rawDesc), len(file_mantrae_v1_event_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mantrae_v1_event_proto_goTypes,
		DependencyIndexes: file_mantrae_v1_event_proto_depIdxs,
		EnumInfos:         file_mantrae_v1_event_proto_enumTypes,
		MessageInfos:      file_mantrae_v1_event_proto_msgTypes,
	}.Build()
	File_mantrae_v1_event_proto = out.File
	file_mantrae_v1_event_proto_goTypes = nil
	file_mantrae_v1_event_proto_depIdxs = nil
}
