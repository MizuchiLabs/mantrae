syntax = "proto3";

package mantrae.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

service UserService {
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse);
  rpc VerifyJWT(VerifyJWTRequest) returns (VerifyJWTResponse);
  rpc VerifyOTP(VerifyOTPRequest) returns (VerifyOTPResponse);
  rpc SendOTP(SendOTPRequest) returns (SendOTPResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
  }
  rpc GetOIDCStatus(GetOIDCStatusRequest) returns (GetOIDCStatusResponse);
}

message User {
  string id = 1;
  string username = 2;
  string password = 3;
  string email = 4;
  bool is_admin = 5;
  string otp = 6;
  google.protobuf.Timestamp otp_expiry = 7;
  google.protobuf.Timestamp last_login = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
}

message LoginUserRequest {
  oneof identifier {
    option (buf.validate.oneof).required = true;
    string username = 1 [(buf.validate.field).string.min_len = 3];
    string email = 2 [(buf.validate.field).string.email = true];
  }
  string password = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 8
  ];
  bool remember = 4;
}
message LoginUserResponse {
  string token = 1;
}

message VerifyJWTRequest {
  string token = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 1
  ];
}
message VerifyJWTResponse {
  User user = 1;
}

message VerifyOTPRequest {
  oneof identifier {
    option (buf.validate.oneof).required = true;
    string username = 1 [(buf.validate.field).string.min_len = 3];
    string email = 2 [(buf.validate.field).string.email = true];
  }
  string otp = 3 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 6
  ];
}
message VerifyOTPResponse {
  string token = 1;
}

message SendOTPRequest {
  oneof identifier {
    option (buf.validate.oneof).required = true;
    string username = 1 [(buf.validate.field).string.min_len = 3];
    string email = 2 [(buf.validate.field).string.email = true];
  }
}
message SendOTPResponse {}

message GetUserRequest {
  oneof identifier {
    option (buf.validate.oneof).required = true;
    string id = 1 [(buf.validate.field).string.min_len = 1];
    string username = 2 [(buf.validate.field).string.min_len = 3];
    string email = 3 [(buf.validate.field).string.email = true];
  }
}
message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  string username = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
  string password = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 8
  ];
  string email = 3 [(buf.validate.field).string.email = true];
  bool is_admin = 4;
}
message CreateUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 1
  ];
  string username = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 3
  ];
  string email = 3 [(buf.validate.field).string.email = true];
  bool is_admin = 4;
  optional string password = 5 [(buf.validate.field).string.min_len = 8];
}
message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.min_len = 1
  ];
}
message DeleteUserResponse {}

message ListUsersRequest {
  optional int64 limit = 1 [(buf.validate.field).cel = {
    id: "limit.valid"
    message: "limit must be either -1 or greater than 0"
    expression: "this == -1 || this > 0"
  }];
  optional int64 offset = 2 [(buf.validate.field).int64.gte = 0];
}
message ListUsersResponse {
  repeated User users = 1;
  int64 total_count = 2;
}

message GetOIDCStatusRequest {}
message GetOIDCStatusResponse {
  bool oidc_enabled = 1;
  bool login_enabled = 2;
  string provider = 3;
}
