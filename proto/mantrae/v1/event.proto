syntax = "proto3";

package mantrae.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";
import "mantrae/v1/agent.proto";
import "mantrae/v1/auditlog.proto";
import "mantrae/v1/dns_provider.proto";
import "mantrae/v1/entry_point.proto";
import "mantrae/v1/middleware.proto";
import "mantrae/v1/router.proto";
import "mantrae/v1/service.proto";
import "mantrae/v1/user.proto";

service EventService {
  // Profile-scoped events (routers, services, middlewares, entrypoints)
  rpc ProfileEvents(ProfileEventsRequest) returns (stream ProfileEventsResponse);

  // Global events (users, dns)
  rpc GlobalEvents(GlobalEventsRequest) returns (stream GlobalEventsResponse);
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_CREATED = 1;
  EVENT_TYPE_UPDATED = 2;
  EVENT_TYPE_DELETED = 3;
}

enum ResourceType {
  RESOURCE_TYPE_UNSPECIFIED = 0;
  RESOURCE_TYPE_ROUTER = 1;
  RESOURCE_TYPE_SERVICE = 2;
  RESOURCE_TYPE_MIDDLEWARE = 3;
  RESOURCE_TYPE_ENTRY_POINT = 4;
  RESOURCE_TYPE_AUDIT_LOG = 5;
  RESOURCE_TYPE_AGENT = 6;
  RESOURCE_TYPE_USER = 7;
  RESOURCE_TYPE_DNS_PROVIDER = 8;
}

message ProfileEvent {
  EventType event_type = 1;
  ResourceType resource_type = 2;
  int64 profile_id = 3;
  google.protobuf.Timestamp timestamp = 4;

  oneof resource {
    Router router = 10;
    Service service = 11;
    Middleware middleware = 12;
    EntryPoint entry_point = 13;
    Agent agent = 14;
    AuditLog audit_log = 15;
  }
}

message GlobalEvent {
  EventType event_type = 1;
  ResourceType resource_type = 2;
  google.protobuf.Timestamp timestamp = 3;

  oneof resource {
    User user = 10;
    DnsProvider dns_provider = 11;
  }
}

message ProfileEventsRequest {
  int64 profile_id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gt = 0
  ];
  repeated ResourceType resource_types = 2; // Filter by specific resource types
}
message ProfileEventsResponse {
  ProfileEvent event = 1;
}

message GlobalEventsRequest {
  repeated ResourceType resource_types = 1; // Filter by specific resource types
}
message GlobalEventsResponse {
  GlobalEvent event = 1;
}
