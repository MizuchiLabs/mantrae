when:
  - branch: [main, nightly]
    event: [push, tag, deployment, manual]
    path:
      include:
        - "web/**"
        - "*.go"
        - "go.mod"
        - "go.sum"

steps:
  - name: build:frontend
    image: node:22-alpine
    directory: web
    commands:
      - npm install --global corepack@latest
      - corepack enable
      - corepack prepare pnpm@latest-10 --activate
      - pnpm config set store-dir .pnpm-store
      - pnpm install
      - pnpm format
      - pnpm build

  - name: test:backend
    image: golang:1.24-alpine
    commands:
      - wget -O- -nv
        https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh
        | sh -s v2.3.0
      - go mod download
      - go mod verify
      - go mod tidy
      - go vet ./...
      - go test ./...
      - golangci-lint run
    depends_on:
      - build:frontend

  - name: release:container
    image: ghcr.io/ko-build/ko:latest
    commands:
      - |
        if [ -n "$CI_COMMIT_TAG" ]; then
          TAGS="-t latest -t $CI_COMMIT_TAG"
        elif [ "$CI_COMMIT_BRANCH" = "$CI_REPO_DEFAULT_BRANCH" ]; then
          TAGS="-t latest"
          echo "Building latest from main branch..."
        else
          TAGS="-t nightly"
          echo "Building nightly release..."
        fi
      - echo "$GITHUB_TOKEN" | ko login ghcr.io -u "$CI_REPO_OWNER"
        --password-stdin
      - KO_DOCKER_REPO=ghcr.io/mizuchilabs/mantrae ko build ./server/cmd --bare
        $TAGS
      - KO_DOCKER_REPO=ghcr.io/mizuchilabs/mantrae-agent ko build ./agent/cmd
        --bare $TAGS
    depends_on:
      - build:frontend
      - test:backend
    environment:
      GITHUB_TOKEN:
        from_secret: gh_token

  - name: release:binary
    image: goreleaser/goreleaser
    commands:
      - goreleaser check
      - goreleaser release --clean --skip=validate
    depends_on:
      - build:frontend
      - test:backend
    environment:
      GITHUB_TOKEN:
        from_secret: gh_token
    when:
      event: tag
      branch: main
