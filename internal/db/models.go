// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"time"

	"github.com/MizuchiLabs/mantrae/internal/source"
	"github.com/traefik/traefik/v3/pkg/config/dynamic"
)

type Agent struct {
	ID         string           `json:"id"`
	ProfileID  int64            `json:"profileId"`
	Hostname   *string          `json:"hostname"`
	PublicIp   *string          `json:"publicIp"`
	PrivateIps *AgentPrivateIPs `json:"privateIps"`
	Containers *AgentContainers `json:"containers"`
	ActiveIp   *string          `json:"activeIp"`
	Token      string           `json:"token"`
	CreatedAt  *time.Time       `json:"createdAt"`
	UpdatedAt  *time.Time       `json:"updatedAt"`
}

type DnsProvider struct {
	ID        int64              `json:"id"`
	Name      string             `json:"name"`
	Type      string             `json:"type"`
	Config    *DNSProviderConfig `json:"config"`
	IsActive  bool               `json:"isActive"`
	CreatedAt *time.Time         `json:"createdAt"`
	UpdatedAt *time.Time         `json:"updatedAt"`
}

type EntryPoint struct {
	ID        int64      `json:"id"`
	ProfileID int64      `json:"profileId"`
	Name      string     `json:"name"`
	Address   string     `json:"address"`
	IsDefault bool       `json:"isDefault"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

type Error struct {
	ID        int64      `json:"id"`
	ProfileID int64      `json:"profileId"`
	Category  string     `json:"category"`
	Message   string     `json:"message"`
	Details   *string    `json:"details"`
	CreatedAt *time.Time `json:"createdAt"`
}

type HttpMiddleware struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.Middleware `json:"config"`
	Source    *string             `json:"source"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type HttpRouter struct {
	ID        int64           `json:"id"`
	ProfileID int64           `json:"profileId"`
	Name      string          `json:"name"`
	Config    *dynamic.Router `json:"config"`
	Source    *string         `json:"source"`
	CreatedAt *time.Time      `json:"createdAt"`
	UpdatedAt *time.Time      `json:"updatedAt"`
}

type HttpService struct {
	ID        int64            `json:"id"`
	ProfileID int64            `json:"profileId"`
	Name      string           `json:"name"`
	Config    *dynamic.Service `json:"config"`
	Source    *string          `json:"source"`
	CreatedAt *time.Time       `json:"createdAt"`
	UpdatedAt *time.Time       `json:"updatedAt"`
}

type Profile struct {
	ID          int64      `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	CreatedAt   *time.Time `json:"createdAt"`
	UpdatedAt   *time.Time `json:"updatedAt"`
}

type RouterDnsProvider struct {
	TraefikID  int64  `json:"traefikId"`
	ProviderID int64  `json:"providerId"`
	RouterName string `json:"routerName"`
}

type Setting struct {
	Key         string     `json:"key"`
	Value       string     `json:"value"`
	Description *string    `json:"description"`
	UpdatedAt   *time.Time `json:"updatedAt"`
}

type TcpMiddleware struct {
	ID        int64                  `json:"id"`
	ProfileID int64                  `json:"profileId"`
	Name      string                 `json:"name"`
	Config    *dynamic.TCPMiddleware `json:"config"`
	Source    *string                `json:"source"`
	CreatedAt *time.Time             `json:"createdAt"`
	UpdatedAt *time.Time             `json:"updatedAt"`
}

type TcpRouter struct {
	ID        int64              `json:"id"`
	ProfileID int64              `json:"profileId"`
	Name      string             `json:"name"`
	Config    *dynamic.TCPRouter `json:"config"`
	Source    *string            `json:"source"`
	CreatedAt *time.Time         `json:"createdAt"`
	UpdatedAt *time.Time         `json:"updatedAt"`
}

type TcpService struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.TCPService `json:"config"`
	Source    *string             `json:"source"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type Traefik struct {
	ID          int64                 `json:"id"`
	ProfileID   int64                 `json:"profileId"`
	AgentID     *string               `json:"agentId"`
	Source      source.Source         `json:"source"`
	Entrypoints *TraefikEntryPoints   `json:"entrypoints"`
	Overview    *TraefikOverview      `json:"overview"`
	Config      *TraefikConfiguration `json:"config"`
	Version     *string               `json:"version"`
	CreatedAt   *time.Time            `json:"createdAt"`
	UpdatedAt   *time.Time            `json:"updatedAt"`
}

type UdpRouter struct {
	ID        int64              `json:"id"`
	ProfileID int64              `json:"profileId"`
	Name      string             `json:"name"`
	Config    *dynamic.UDPRouter `json:"config"`
	Source    *string            `json:"source"`
	CreatedAt *time.Time         `json:"createdAt"`
	UpdatedAt *time.Time         `json:"updatedAt"`
}

type UdpService struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.UDPService `json:"config"`
	Source    *string             `json:"source"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type User struct {
	ID        string     `json:"id"`
	Username  string     `json:"username"`
	Password  string     `json:"password"`
	Email     *string    `json:"email"`
	IsAdmin   bool       `json:"isAdmin"`
	Otp       *string    `json:"otp"`
	OtpExpiry *time.Time `json:"otpExpiry"`
	LastLogin *time.Time `json:"lastLogin"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
}
