// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"time"

	"github.com/mizuchilabs/mantrae/internal/store/schema"
	"github.com/traefik/traefik/v3/pkg/config/dynamic"
)

type Agent struct {
	ID         string                  `json:"id"`
	ProfileID  int64                   `json:"profileId"`
	Hostname   *string                 `json:"hostname"`
	PublicIp   *string                 `json:"publicIp"`
	PrivateIps *schema.AgentPrivateIPs `json:"privateIps"`
	Containers *schema.AgentContainers `json:"containers"`
	ActiveIp   *string                 `json:"activeIp"`
	Token      string                  `json:"token"`
	CreatedAt  *time.Time              `json:"createdAt"`
	UpdatedAt  *time.Time              `json:"updatedAt"`
}

type DnsProvider struct {
	ID        int64                     `json:"id"`
	Name      string                    `json:"name"`
	Type      string                    `json:"type"`
	Config    *schema.DNSProviderConfig `json:"config"`
	IsActive  bool                      `json:"isActive"`
	CreatedAt *time.Time                `json:"createdAt"`
	UpdatedAt *time.Time                `json:"updatedAt"`
}

type EntryPoint struct {
	ID        int64      `json:"id"`
	ProfileID int64      `json:"profileId"`
	Name      string     `json:"name"`
	Address   string     `json:"address"`
	IsDefault bool       `json:"isDefault"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
}

type Error struct {
	ID        int64      `json:"id"`
	ProfileID int64      `json:"profileId"`
	Category  string     `json:"category"`
	Message   string     `json:"message"`
	Details   *string    `json:"details"`
	CreatedAt *time.Time `json:"createdAt"`
}

type HttpMiddleware struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.Middleware `json:"config"`
	Source    *string             `json:"source"`
	Enabled   bool                `json:"enabled"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type HttpRouter struct {
	ID        int64           `json:"id"`
	ProfileID int64           `json:"profileId"`
	Name      string          `json:"name"`
	Config    *dynamic.Router `json:"config"`
	Source    *string         `json:"source"`
	Enabled   bool            `json:"enabled"`
	CreatedAt *time.Time      `json:"createdAt"`
	UpdatedAt *time.Time      `json:"updatedAt"`
}

type HttpRouterDnsProvider struct {
	HttpRouterID  int64 `json:"httpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

type HttpService struct {
	ID        int64            `json:"id"`
	ProfileID int64            `json:"profileId"`
	Name      string           `json:"name"`
	Config    *dynamic.Service `json:"config"`
	Source    *string          `json:"source"`
	CreatedAt *time.Time       `json:"createdAt"`
	UpdatedAt *time.Time       `json:"updatedAt"`
}

type Profile struct {
	ID          int64      `json:"id"`
	Name        string     `json:"name"`
	Description *string    `json:"description"`
	CreatedAt   *time.Time `json:"createdAt"`
	UpdatedAt   *time.Time `json:"updatedAt"`
}

type Setting struct {
	Key         string     `json:"key"`
	Value       string     `json:"value"`
	Description *string    `json:"description"`
	UpdatedAt   *time.Time `json:"updatedAt"`
}

type TcpMiddleware struct {
	ID        int64                  `json:"id"`
	ProfileID int64                  `json:"profileId"`
	Name      string                 `json:"name"`
	Config    *dynamic.TCPMiddleware `json:"config"`
	Source    *string                `json:"source"`
	Enabled   bool                   `json:"enabled"`
	CreatedAt *time.Time             `json:"createdAt"`
	UpdatedAt *time.Time             `json:"updatedAt"`
}

type TcpRouter struct {
	ID        int64              `json:"id"`
	ProfileID int64              `json:"profileId"`
	Name      string             `json:"name"`
	Config    *dynamic.TCPRouter `json:"config"`
	Source    *string            `json:"source"`
	Enabled   bool               `json:"enabled"`
	CreatedAt *time.Time         `json:"createdAt"`
	UpdatedAt *time.Time         `json:"updatedAt"`
}

type TcpRouterDnsProvider struct {
	TcpRouterID   int64 `json:"tcpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

type TcpService struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.TCPService `json:"config"`
	Source    *string             `json:"source"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type TraefikInstance struct {
	ID          int64                 `json:"id"`
	ProfileID   int64                 `json:"profileId"`
	Entrypoints *schema.EntryPoint    `json:"entrypoints"`
	Overview    *schema.Overview      `json:"overview"`
	Config      *schema.Configuration `json:"config"`
	Version     *string               `json:"version"`
	CreatedAt   *time.Time            `json:"createdAt"`
	UpdatedAt   *time.Time            `json:"updatedAt"`
}

type UdpRouter struct {
	ID        int64              `json:"id"`
	ProfileID int64              `json:"profileId"`
	Name      string             `json:"name"`
	Config    *dynamic.UDPRouter `json:"config"`
	Source    *string            `json:"source"`
	Enabled   bool               `json:"enabled"`
	CreatedAt *time.Time         `json:"createdAt"`
	UpdatedAt *time.Time         `json:"updatedAt"`
}

type UdpRouterDnsProvider struct {
	UdpRouterID   int64 `json:"udpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

type UdpService struct {
	ID        int64               `json:"id"`
	ProfileID int64               `json:"profileId"`
	Name      string              `json:"name"`
	Config    *dynamic.UDPService `json:"config"`
	Source    *string             `json:"source"`
	CreatedAt *time.Time          `json:"createdAt"`
	UpdatedAt *time.Time          `json:"updatedAt"`
}

type User struct {
	ID        string     `json:"id"`
	Username  string     `json:"username"`
	Password  string     `json:"password"`
	Email     *string    `json:"email"`
	IsAdmin   bool       `json:"isAdmin"`
	Otp       *string    `json:"otp"`
	OtpExpiry *time.Time `json:"otpExpiry"`
	LastLogin *time.Time `json:"lastLogin"`
	CreatedAt *time.Time `json:"createdAt"`
	UpdatedAt *time.Time `json:"updatedAt"`
}
