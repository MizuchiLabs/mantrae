// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: tcp_router_dns_provider.sql

package db

import (
	"context"
)

const createTcpRouterDNSProvider = `-- name: CreateTcpRouterDNSProvider :exec
INSERT
OR IGNORE INTO tcp_router_dns_providers (tcp_router_id, dns_provider_id)
VALUES
  (?, ?)
`

type CreateTcpRouterDNSProviderParams struct {
	TcpRouterID   int64 `json:"tcpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

func (q *Queries) CreateTcpRouterDNSProvider(ctx context.Context, arg CreateTcpRouterDNSProviderParams) error {
	_, err := q.exec(ctx, q.createTcpRouterDNSProviderStmt, createTcpRouterDNSProvider, arg.TcpRouterID, arg.DnsProviderID)
	return err
}

const deleteTcpRouterDNSProvider = `-- name: DeleteTcpRouterDNSProvider :exec
DELETE FROM tcp_router_dns_providers
WHERE
  tcp_router_id = ?
  AND dns_provider_id = ?
`

type DeleteTcpRouterDNSProviderParams struct {
	TcpRouterID   int64 `json:"tcpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

func (q *Queries) DeleteTcpRouterDNSProvider(ctx context.Context, arg DeleteTcpRouterDNSProviderParams) error {
	_, err := q.exec(ctx, q.deleteTcpRouterDNSProviderStmt, deleteTcpRouterDNSProvider, arg.TcpRouterID, arg.DnsProviderID)
	return err
}

const getTcpRouterDNSProvider = `-- name: GetTcpRouterDNSProvider :one
SELECT
  tcp_router_id, dns_provider_id
FROM
  tcp_router_dns_providers
WHERE
  tcp_router_id = ?
  AND dns_provider_id = ?
`

type GetTcpRouterDNSProviderParams struct {
	TcpRouterID   int64 `json:"tcpRouterId"`
	DnsProviderID int64 `json:"dnsProviderId"`
}

func (q *Queries) GetTcpRouterDNSProvider(ctx context.Context, arg GetTcpRouterDNSProviderParams) (TcpRouterDnsProvider, error) {
	row := q.queryRow(ctx, q.getTcpRouterDNSProviderStmt, getTcpRouterDNSProvider, arg.TcpRouterID, arg.DnsProviderID)
	var i TcpRouterDnsProvider
	err := row.Scan(&i.TcpRouterID, &i.DnsProviderID)
	return i, err
}

const listTcpRouterDNSProviders = `-- name: ListTcpRouterDNSProviders :many
SELECT
  tcp_router_id, dns_provider_id
FROM
  tcp_router_dns_providers
WHERE
  tcp_router_id = ?
`

func (q *Queries) ListTcpRouterDNSProviders(ctx context.Context, tcpRouterID int64) ([]TcpRouterDnsProvider, error) {
	rows, err := q.query(ctx, q.listTcpRouterDNSProvidersStmt, listTcpRouterDNSProviders, tcpRouterID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []TcpRouterDnsProvider
	for rows.Next() {
		var i TcpRouterDnsProvider
		if err := rows.Scan(&i.TcpRouterID, &i.DnsProviderID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
